name: Backend CI

on:
  push:
    branches: [ main ]
    paths: ['backend/**']  # Only run when backend code changes
  pull_request:
    branches: [ main ]
    paths: ['backend/**']

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Get your code
    - name: Checkout code
      uses: actions/checkout@v4
      
    # Step 2: Install Java 17
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    # Step 3: Cache Gradle dependencies (speeds up builds)
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('backend/**/*.gradle*', 'backend/**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
        
    # Step 4: Make gradlew executable
    - name: Grant execute permission for gradlew
      run: chmod +x backend/gradlew
      
    # Step 5: Build the application
    - name: Build Application
      run: cd backend && ./gradlew build -x test
      
    # Step 6: Run Unit Tests
    - name: Run Unit Tests
      run: cd backend && ./gradlew test
      
    # Step 7: Test Server Startup
    - name: Test Server Startup
      run: |
        cd backend
        timeout 30s ./gradlew bootRun &
        SERVER_PID=$!
        sleep 15
        if ps -p $SERVER_PID > /dev/null; then
          echo "✅ Server started successfully"
          kill $SERVER_PID
        else
          echo "❌ Server failed to start"
          exit 1
        fi
        
    # Step 8: Upload JAR artifact
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: ProjectSwipe-Backend-JAR
        path: backend/build/libs/*.jar
        
    # Step 9: Upload Test Results (if tests fail)
    - name: Upload Test Reports
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: backend-test-reports
        path: backend/build/reports/tests/