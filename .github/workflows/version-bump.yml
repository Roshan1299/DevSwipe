name: Version Bump

on:
  push:
    branches:
      - main
    paths:
      - 'code/app/build.gradle.kts'
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  version-bump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 0
          
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('code/**/*.gradle*', 'code/**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Grant execute permission for gradlew
        run: chmod +x code/gradlew
        
      - name: Get current version
        id: current_version
        run: |
          cd code
          CURRENT_VERSION=$(grep -oP 'versionName = "\K[^"]*' app/build.gradle.kts)
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"
        
      - name: Calculate new version
        id: new_version
        run: |
          CURRENT="${{ steps.current_version.outputs.current_version }}"
          BUMP_TYPE="${{ github.event.inputs.release_type || 'patch' }}"
          
          # Parse version (assuming format: major.minor.patch)
          IFS='.' read -ra VERSION <<< "$CURRENT"
          MAJOR=${VERSION[0]}
          MINOR=${VERSION[1]}
          PATCH=${VERSION[2]}
          
          case $BUMP_TYPE in
            "major")
              MAJOR=$((MAJOR + 1))
              MINOR=0
              PATCH=0
              ;;
            "minor")
              MINOR=$((MINOR + 1))
              PATCH=0
              ;;
            "patch")
              PATCH=$((PATCH + 1))
              ;;
          esac
          
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"
        
      - name: Update version in build.gradle.kts
        run: |
          cd code
          # Update versionName
          sed -i "s/versionName = \".*\"/versionName = \"${{ steps.new_version.outputs.new_version }}\"/" app/build.gradle.kts
          
          # Update versionCode (increment by 1)
          CURRENT_CODE=$(grep -oP 'versionCode = \K\d+' app/build.gradle.kts)
          NEW_CODE=$((CURRENT_CODE + 1))
          sed -i "s/versionCode = $CURRENT_CODE/versionCode = $NEW_CODE/" app/build.gradle.kts
          
          echo "Updated versionName to ${{ steps.new_version.outputs.new_version }}"
          echo "Updated versionCode to $NEW_CODE"
        
      # Quick build test before committing
      - name: Test build
        run: cd code && ./gradlew assembleDebug --no-daemon
        
      - name: Commit version changes
        run: |
          git add code/app/build.gradle.kts
          git commit -m "build: version bump to ${{ steps.new_version.outputs.new_version }}"
          git push origin main
